{"ast":null,"code":"var _jsxFileName = \"D:\\\\AutoML\\\\app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './index-react.css';\nimport { Button, IconButton, TextField } from '@mui/material';\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\nimport MicIcon from '@mui/icons-material/Mic';\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\nimport LightModeIcon from '@mui/icons-material/LightMode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AutoMLAssistant = () => {\n  _s();\n  const [theme, setTheme] = useState('dark');\n  const [query, setQuery] = useState('');\n  const recognitionRef = useRef(null);\n  useEffect(() => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (SpeechRecognition) {\n      const recognition = new SpeechRecognition();\n      recognition.lang = 'en-US';\n      recognition.interimResults = false;\n      recognition.maxAlternatives = 1;\n      recognition.onresult = event => {\n        setQuery(event.results[0][0].transcript);\n      };\n      recognitionRef.current = recognition;\n    }\n  }, []);\n  const handleVoice = () => {\n    if (recognitionRef.current) recognitionRef.current.start();\n  };\n  const toggleTheme = () => {\n    setTheme(prev => prev === 'dark' ? 'light' : 'dark');\n    document.body.classList.toggle('light');\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('Submitted:', query);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `assistant-wrapper ${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background-animation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      className: \"theme-toggle\",\n      onClick: toggleTheme,\n      children: theme === 'dark' ? /*#__PURE__*/_jsxDEV(DarkModeIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(LightModeIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 48\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"assistant-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container tilt\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          variant: \"outlined\",\n          placeholder: \"What do you want to know?\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          InputProps: {\n            style: {\n              fontSize: '1.2rem',\n              color: theme === 'dark' ? '#fff' : '#000'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icons\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"file-upload\",\n            children: /*#__PURE__*/_jsxDEV(AttachFileIcon, {\n              className: \"icon-btn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"file-upload\",\n            type: \"file\",\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MicIcon, {\n            className: \"icon-btn\",\n            onClick: handleVoice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        className: \"submit-btn tilt\",\n        children: \"Let's GO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(AutoMLAssistant, \"moEsc5HG51LmBdnbS8LHUJRWdws=\");\n_c = AutoMLAssistant;\nexport default AutoMLAssistant;\nvar _c;\n$RefreshReg$(_c, \"AutoMLAssistant\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Button","IconButton","TextField","AttachFileIcon","MicIcon","DarkModeIcon","LightModeIcon","jsxDEV","_jsxDEV","AutoMLAssistant","_s","theme","setTheme","query","setQuery","recognitionRef","SpeechRecognition","window","webkitSpeechRecognition","recognition","lang","interimResults","maxAlternatives","onresult","event","results","transcript","current","handleVoice","start","toggleTheme","prev","document","body","classList","toggle","handleSubmit","e","preventDefault","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","fullWidth","variant","placeholder","value","onChange","target","InputProps","style","fontSize","color","htmlFor","id","type","hidden","_c","$RefreshReg$"],"sources":["D:/AutoML/app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport './index-react.css';\r\nimport { Button, IconButton, TextField } from '@mui/material';\r\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\r\nimport MicIcon from '@mui/icons-material/Mic';\r\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\r\nimport LightModeIcon from '@mui/icons-material/LightMode';\r\n\r\nconst AutoMLAssistant = () => {\r\n  const [theme, setTheme] = useState('dark');\r\n  const [query, setQuery] = useState('');\r\n  const recognitionRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    if (SpeechRecognition) {\r\n      const recognition = new SpeechRecognition();\r\n      recognition.lang = 'en-US';\r\n      recognition.interimResults = false;\r\n      recognition.maxAlternatives = 1;\r\n      recognition.onresult = (event) => {\r\n        setQuery(event.results[0][0].transcript);\r\n      };\r\n      recognitionRef.current = recognition;\r\n    }\r\n  }, []);\r\n\r\n  const handleVoice = () => {\r\n    if (recognitionRef.current) recognitionRef.current.start();\r\n  };\r\n\r\n  const toggleTheme = () => {\r\n    setTheme((prev) => (prev === 'dark' ? 'light' : 'dark'));\r\n    document.body.classList.toggle('light');\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log('Submitted:', query);\r\n  };\r\n\r\n  return (\r\n    <div className={`assistant-wrapper ${theme}`}>\r\n      <div className=\"background-animation\"></div>\r\n\r\n      <IconButton className=\"theme-toggle\" onClick={toggleTheme}>\r\n        {theme === 'dark' ? <DarkModeIcon /> : <LightModeIcon />}\r\n      </IconButton>\r\n\r\n      <form className=\"assistant-form\" onSubmit={handleSubmit}>\r\n        <div className=\"input-container tilt\">\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            placeholder=\"What do you want to know?\"\r\n            value={query}\r\n            onChange={(e) => setQuery(e.target.value)}\r\n            InputProps={{ style: { fontSize: '1.2rem', color: theme === 'dark' ? '#fff' : '#000' } }}\r\n          />\r\n\r\n          <div className=\"icons\">\r\n            <label htmlFor=\"file-upload\">\r\n              <AttachFileIcon className=\"icon-btn\" />\r\n            </label>\r\n            <input id=\"file-upload\" type=\"file\" hidden />\r\n            <MicIcon className=\"icon-btn\" onClick={handleVoice} />\r\n          </div>\r\n        </div>\r\n\r\n        <Button type=\"submit\" variant=\"contained\" className=\"submit-btn tilt\">\r\n          Let's GO\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutoMLAssistant;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}