{"ast":null,"code":"var _jsxFileName = \"D:\\\\AutoML\\\\app\\\\frontend\\\\src\\\\pages\\\\Conversation.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\n// Import your CSS if you REALLY need specific classes not easily done with sx\n// import './conversation-style.css'; // Usually avoid this with MUI\nimport { Box, List, ListItem, ListItemText, TextField, Button, Paper, Typography, InputAdornment, IconButton } from '@mui/material';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport SendIcon from '@mui/icons-material/Send'; // Keep SendIcon\nimport { callApi } from '../api/client';\n\n// Keep the parseMessage function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst parseMessage = msg => {\n  if (typeof msg !== 'string') return {\n    sender: 'unknown',\n    content: String(msg)\n  };\n  const parts = msg.split(\":\", 1);\n  const sender = parts[0].toLowerCase();\n  let content = msg.substring(parts[0].length + 1).trim();\n  if (sender === 'ai' && content.match(/^Question\\s*\\d+\\)/i)) {\n    content = content.substring(content.indexOf(')') + 1).trim();\n  }\n  return {\n    sender,\n    content\n  };\n};\nexport default function Conversation() {\n  _s();\n  const {\n    state\n  } = useLocation();\n  const navigate = useNavigate();\n  const [conversation, setConversation] = useState((state === null || state === void 0 ? void 0 : state.conversation) || []);\n  const [userResponse, setUserResponse] = useState('');\n  const [isFinal, setIsFinal] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const conversationEndRef = useRef(null);\n\n  // Keep useEffect for scrolling\n  useEffect(() => {\n    var _conversationEndRef$c;\n    (_conversationEndRef$c = conversationEndRef.current) === null || _conversationEndRef$c === void 0 ? void 0 : _conversationEndRef$c.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [conversation]);\n\n  // Keep handleSubmit function\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!userResponse.trim() || isLoading) return;\n    setIsLoading(true);\n    const messageToSend = userResponse;\n    setUserResponse('');\n    try {\n      const data = await callApi('conversation', 'POST', {\n        user_response: messageToSend\n      });\n      setConversation(data.conversation || []);\n      if (data.final_problem) {\n        setIsFinal(true);\n      }\n    } catch (error) {\n      console.error(\"API call failed:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Define colors from CSS (or use theme colors)\n  const chatBgColor = '#242526'; // .chat-container background\n  const bubbleAiBgColor = '#3a3b3c'; // .ai-bubble background\n  const bubbleUserBgColor = '#5865f2'; // Use submit button color for user bubble? Or another grey?\n  const inputBgColor = '#3a3b3c'; // input background\n  const inputFocusBgColor = '#4e4f50'; // input focus background\n  const textColorLight = '#e0e0e0'; // body color\n  const bubbleAiTextColor = '#f0f2f5'; // .ai-bubble text\n  const bubbleUserTextColor = '#ffffff'; // White text for user bubble\n  const placeholderColor = '#777'; // input placeholder\n  const submitButtonBgColor = '#5865f2'; // .submit-button background\n  const submitButtonHoverBgColor = '#6772e5'; // hover\n  const submitButtonActiveBgColor = '#4a55d4'; // active\n\n  return (\n    /*#__PURE__*/\n    // Main chat container - applying .chat-container styles\n    _jsxDEV(Box, {\n      sx: {\n        maxWidth: '800px',\n        // max-width\n        width: '95%',\n        // width\n        margin: 'auto',\n        // center horizontally\n        mt: 5,\n        mb: 5,\n        // margin: 40px auto; (using theme spacing 5*8px=40px)\n        p: 5,\n        // padding: 40px; (using theme spacing)\n        bgcolor: chatBgColor,\n        // background-color\n        borderRadius: '15px',\n        // border-radius\n        boxShadow: '0 5px 20px rgba(0, 0, 0, 0.3)',\n        // box-shadow\n        display: 'flex',\n        // display: flex\n        flexDirection: 'column',\n        // flex-direction: column\n        // align-items: stretch // Default behavior usually sufficient\n        minHeight: '80vh',\n        // Ensure it takes significant height\n        maxHeight: 'calc(100vh - 80px)' // Limit max height based on top/bottom margins\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 5,\n          // margin-bottom: 40px;\n          pb: 2.5 // padding-bottom: 20px;\n          // pt: 0 - default        // padding-top: 0;\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"h1\" // Adjusted variant slightly for better fit\n          ,\n          sx: {\n            // fontSize: '2.2rem',    // Already handled by variant=\"h4\" approximately\n            color: '#fff',\n            // color\n            fontWeight: 500,\n            // font-weight\n            mb: 1.25,\n            // margin-bottom: 10px;\n            textAlign: 'center' // Ensure header text is centered as per CSS body style\n          },\n          children: \"Getting On Track...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        sx: {\n          width: '100%',\n          // width\n          flexGrow: 1,\n          // Allow list to take up space\n          overflowY: 'auto',\n          // Enable scrolling for messages\n          bgcolor: 'transparent',\n          // background-color\n          p: 0,\n          // padding: 0;\n          mb: 3.75,\n          // margin-bottom: 30px;\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 1.875 // margin-bottom: 15px on bubbles -> gap approx 15px\n        },\n        children: [conversation.map((msg, i) => {\n          const {\n            sender,\n            content\n          } = parseMessage(msg);\n          const isAI = sender === 'ai';\n          return /*#__PURE__*/_jsxDEV(ListItem, {\n            sx: {\n              display: 'flex',\n              // Align bubbles left/right\n              justifyContent: isAI ? 'flex-start' : 'flex-end',\n              p: 0 // No padding on list item itself\n              // alignSelf is handled by flex alignment mostly\n            },\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 0 // Use elevation 0 to rely solely on bgcolor\n              ,\n              sx: {\n                p: 2.5,\n                // padding: 20px;\n                borderRadius: '20px',\n                // border-radius\n                // Specific corners adjusted if needed, but 20px might be fine overall\n                // borderTopLeftRadius: isAI ? '4px' : '16px',\n                // borderTopRightRadius: isAI ? '16px' : '4px',\n                bgcolor: isAI ? bubbleAiBgColor : bubbleUserBgColor,\n                // background-color\n                color: isAI ? bubbleAiTextColor : bubbleUserTextColor,\n                // color\n                maxWidth: '80%',\n                // max-width\n                lineHeight: 1.4,\n                // line-height\n                fontSize: '1rem',\n                // font-size (explicitly set, MUI might default differently)\n                wordBreak: 'break-word' // Ensure text wraps\n              },\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: content\n                // Remove primaryTypographyProps if setting fontSize/lineHeight on Paper\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: conversationEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 0 // No padding needed on container if form elements have it\n          // borderTop: '1px solid', borderColor: 'divider', // Optional divider\n          // bgcolor: 'background.default' // Optional background\n        },\n        children: isFinal ?\n        /*#__PURE__*/\n        // Final Message - Applying .saved-message styles\n        _jsxDEV(Box, {\n          sx: {\n            width: '100%',\n            bgcolor: bubbleAiBgColor,\n            // background-color\n            borderRadius: '20px',\n            p: 2.5,\n            // padding: 20px;\n            mt: 2.5,\n            // margin-top: 20px;\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              fontSize: '1rem',\n              lineHeight: 1.4,\n              color: bubbleAiTextColor\n            },\n            children: \"Your final business problem has been saved for later use.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this) :\n        /*#__PURE__*/\n        // Input Form - Applying .response-form styles\n        _jsxDEV(Box, {\n          component: \"form\",\n          onSubmit: handleSubmit,\n          sx: {\n            width: '100%',\n            // width\n            display: 'flex',\n            // display: flex\n            // justifyContent: 'center', // Centering handled by parent alignment\n            gap: 1.25,\n            // gap: 10px;\n            mb: 2.5 // margin-bottom: 20px;\n          },\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true // replaces flex: 1\n            ,\n            variant: \"outlined\" // Use outlined to easily style the wrapper\n            ,\n            size: \"small\" // Controls height somewhat\n            ,\n            placeholder: \"Type your answer here...\",\n            value: userResponse,\n            onChange: e => setUserResponse(e.target.value),\n            required: true,\n            disabled: isLoading,\n            InputProps: {\n              // Target internal input element and add adornment\n              sx: {\n                // Style the input base itself\n                color: '#fff',\n                // input color\n                fontSize: '1rem',\n                // input font-size\n                '& input::placeholder': {\n                  // Style placeholder specifically\n                  color: placeholderColor,\n                  opacity: 1,\n                  // Ensure placeholder is visible\n                  fontSize: '1rem'\n                }\n              },\n              endAdornment:\n              /*#__PURE__*/\n              // Submit button as adornment\n              _jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  type: \"submit\",\n                  disabled: isLoading || !userResponse.trim(),\n                  edge: \"end\",\n                  sx: {\n                    // Apply .submit-button styles to IconButton\n                    color: '#fff',\n                    bgcolor: submitButtonBgColor,\n                    borderRadius: '25px',\n                    // Make it round like the input\n                    p: '8px',\n                    // Adjust padding for icon size\n                    fontSize: '1rem',\n                    // Not directly applicable, controls icon size relatively\n                    transition: 'background-color 0.3s ease, transform 0.2s ease',\n                    '&:hover': {\n                      bgcolor: submitButtonHoverBgColor,\n                      transform: 'translateY(-1px)'\n                    },\n                    '&:active': {\n                      bgcolor: submitButtonActiveBgColor,\n                      transform: 'translateY(0)'\n                    }\n                    // Adjust margin if needed to align vertically\n                    // mr: -1 // Pull closer to edge if needed\n                  },\n                  children: /*#__PURE__*/_jsxDEV(SendIcon, {\n                    sx: {\n                      fontSize: '1.25rem'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 21\n              }, this)\n            }\n            // Target the outlined input wrapper for background and border\n            ,\n            sx: {\n              flex: 1,\n              // Ensure TextField takes up space like the input did\n              '& .MuiOutlinedInput-root': {\n                bgcolor: inputBgColor,\n                // background-color\n                borderRadius: '25px',\n                // border-radius\n                paddingLeft: '20px',\n                // Simulate input padding start\n                paddingRight: '10px',\n                // Adjust right padding for adornment\n                fontSize: '1rem',\n                transition: 'background-color 0.2s ease',\n                '& fieldset': {\n                  // Remove the default border\n                  border: 'none'\n                },\n                '&.Mui-focused': {\n                  bgcolor: inputFocusBgColor,\n                  // :focus background-color\n                  '& fieldset': {\n                    border: 'none' // Ensure no border on focus either\n                  }\n                },\n                '&:hover fieldset': {\n                  // Remove hover border\n                  border: 'none'\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(Conversation, \"U16qMFmXaVkxSP2jqA2h5aD9oXI=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Conversation;\nvar _c;\n$RefreshReg$(_c, \"Conversation\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Box","List","ListItem","ListItemText","TextField","Button","Paper","Typography","InputAdornment","IconButton","useLocation","useNavigate","SendIcon","callApi","jsxDEV","_jsxDEV","parseMessage","msg","sender","content","String","parts","split","toLowerCase","substring","length","trim","match","indexOf","Conversation","_s","state","navigate","conversation","setConversation","userResponse","setUserResponse","isFinal","setIsFinal","isLoading","setIsLoading","conversationEndRef","_conversationEndRef$c","current","scrollIntoView","behavior","handleSubmit","e","preventDefault","messageToSend","data","user_response","final_problem","error","console","chatBgColor","bubbleAiBgColor","bubbleUserBgColor","inputBgColor","inputFocusBgColor","textColorLight","bubbleAiTextColor","bubbleUserTextColor","placeholderColor","submitButtonBgColor","submitButtonHoverBgColor","submitButtonActiveBgColor","sx","maxWidth","width","margin","mt","mb","p","bgcolor","borderRadius","boxShadow","display","flexDirection","minHeight","maxHeight","children","pb","variant","component","color","fontWeight","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","flexGrow","overflowY","gap","map","i","isAI","justifyContent","elevation","lineHeight","fontSize","wordBreak","primary","ref","onSubmit","fullWidth","size","placeholder","value","onChange","target","required","disabled","InputProps","opacity","endAdornment","position","type","edge","transition","transform","flex","paddingLeft","paddingRight","border","_c","$RefreshReg$"],"sources":["D:/AutoML/app/frontend/src/pages/Conversation.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\n// Import your CSS if you REALLY need specific classes not easily done with sx\r\n// import './conversation-style.css'; // Usually avoid this with MUI\r\nimport { Box, List, ListItem, ListItemText, TextField, Button, Paper, Typography, InputAdornment, IconButton } from '@mui/material';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport SendIcon from '@mui/icons-material/Send'; // Keep SendIcon\r\nimport { callApi } from '../api/client';\r\n\r\n// Keep the parseMessage function\r\nconst parseMessage = (msg) => {\r\n  if (typeof msg !== 'string') return { sender: 'unknown', content: String(msg) };\r\n  const parts = msg.split(\":\", 1);\r\n  const sender = parts[0].toLowerCase();\r\n  let content = msg.substring(parts[0].length + 1).trim();\r\n  if (sender === 'ai' && content.match(/^Question\\s*\\d+\\)/i)) {\r\n    content = content.substring(content.indexOf(')') + 1).trim();\r\n  }\r\n  return { sender, content };\r\n};\r\n\r\n\r\nexport default function Conversation() {\r\n  const { state } = useLocation();\r\n  const navigate = useNavigate();\r\n  const [conversation, setConversation] = useState(state?.conversation || []);\r\n  const [userResponse, setUserResponse] = useState('');\r\n  const [isFinal, setIsFinal] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const conversationEndRef = useRef(null);\r\n\r\n  // Keep useEffect for scrolling\r\n  useEffect(() => {\r\n    conversationEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [conversation]);\r\n\r\n  // Keep handleSubmit function\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!userResponse.trim() || isLoading) return;\r\n    setIsLoading(true);\r\n    const messageToSend = userResponse;\r\n    setUserResponse('');\r\n    try {\r\n      const data = await callApi('conversation', 'POST', { user_response: messageToSend });\r\n      setConversation(data.conversation || []);\r\n      if (data.final_problem) {\r\n        setIsFinal(true);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"API call failed:\", error);\r\n    } finally {\r\n       setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Define colors from CSS (or use theme colors)\r\n  const chatBgColor = '#242526'; // .chat-container background\r\n  const bubbleAiBgColor = '#3a3b3c'; // .ai-bubble background\r\n  const bubbleUserBgColor = '#5865f2'; // Use submit button color for user bubble? Or another grey?\r\n  const inputBgColor = '#3a3b3c'; // input background\r\n  const inputFocusBgColor = '#4e4f50'; // input focus background\r\n  const textColorLight = '#e0e0e0'; // body color\r\n  const bubbleAiTextColor = '#f0f2f5'; // .ai-bubble text\r\n  const bubbleUserTextColor = '#ffffff'; // White text for user bubble\r\n  const placeholderColor = '#777'; // input placeholder\r\n  const submitButtonBgColor = '#5865f2'; // .submit-button background\r\n  const submitButtonHoverBgColor = '#6772e5'; // hover\r\n  const submitButtonActiveBgColor = '#4a55d4'; // active\r\n\r\n  return (\r\n    // Main chat container - applying .chat-container styles\r\n    <Box sx={{\r\n      maxWidth: '800px',       // max-width\r\n      width: '95%',            // width\r\n      margin: 'auto',          // center horizontally\r\n      mt: 5, mb: 5,             // margin: 40px auto; (using theme spacing 5*8px=40px)\r\n      p: 5,                    // padding: 40px; (using theme spacing)\r\n      bgcolor: chatBgColor,    // background-color\r\n      borderRadius: '15px',    // border-radius\r\n      boxShadow: '0 5px 20px rgba(0, 0, 0, 0.3)', // box-shadow\r\n      display: 'flex',         // display: flex\r\n      flexDirection: 'column', // flex-direction: column\r\n      // align-items: stretch // Default behavior usually sufficient\r\n      minHeight: '80vh',        // Ensure it takes significant height\r\n      maxHeight: 'calc(100vh - 80px)', // Limit max height based on top/bottom margins\r\n    }}>\r\n\r\n      {/* Header - applying .header styles */}\r\n      <Box sx={{\r\n        mb: 5,                    // margin-bottom: 40px;\r\n        pb: 2.5,                  // padding-bottom: 20px;\r\n        // pt: 0 - default        // padding-top: 0;\r\n      }}>\r\n        <Typography variant=\"h4\" component=\"h1\" // Adjusted variant slightly for better fit\r\n          sx ={{\r\n            // fontSize: '2.2rem',    // Already handled by variant=\"h4\" approximately\r\n            color: '#fff',         // color\r\n            fontWeight: 500,       // font-weight\r\n            mb: 1.25,              // margin-bottom: 10px;\r\n            textAlign: 'center',   // Ensure header text is centered as per CSS body style\r\n          }}\r\n        >\r\n          Getting On Track...\r\n        </Typography>\r\n      </Box>\r\n\r\n      {/* Conversation Area - applying .conversation styles */}\r\n      <List sx={{\r\n          width: '100%',           // width\r\n          flexGrow: 1,             // Allow list to take up space\r\n          overflowY: 'auto',       // Enable scrolling for messages\r\n          bgcolor: 'transparent',  // background-color\r\n          p: 0,                    // padding: 0;\r\n          mb: 3.75,                // margin-bottom: 30px;\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          gap: 1.875,              // margin-bottom: 15px on bubbles -> gap approx 15px\r\n      }}>\r\n        {conversation.map((msg, i) => {\r\n          const { sender, content } = parseMessage(msg);\r\n          const isAI = sender === 'ai';\r\n\r\n          return (\r\n            <ListItem\r\n              key={i}\r\n              sx={{\r\n                display: 'flex',\r\n                // Align bubbles left/right\r\n                justifyContent: isAI ? 'flex-start' : 'flex-end',\r\n                p: 0, // No padding on list item itself\r\n                // alignSelf is handled by flex alignment mostly\r\n              }}\r\n            >\r\n              {/* Chat Bubble - Applying .ai-bubble / user bubble styles */}\r\n              <Paper\r\n                elevation={0} // Use elevation 0 to rely solely on bgcolor\r\n                sx={{\r\n                  p: 2.5, // padding: 20px;\r\n                  borderRadius: '20px', // border-radius\r\n                  // Specific corners adjusted if needed, but 20px might be fine overall\r\n                  // borderTopLeftRadius: isAI ? '4px' : '16px',\r\n                  // borderTopRightRadius: isAI ? '16px' : '4px',\r\n                  bgcolor: isAI ? bubbleAiBgColor : bubbleUserBgColor, // background-color\r\n                  color: isAI ? bubbleAiTextColor : bubbleUserTextColor, // color\r\n                  maxWidth: '80%', // max-width\r\n                  lineHeight: 1.4, // line-height\r\n                  fontSize: '1rem', // font-size (explicitly set, MUI might default differently)\r\n                  wordBreak: 'break-word', // Ensure text wraps\r\n                }}\r\n              >\r\n                <ListItemText\r\n                    primary={content}\r\n                    // Remove primaryTypographyProps if setting fontSize/lineHeight on Paper\r\n                />\r\n              </Paper>\r\n            </ListItem>\r\n          );\r\n        })}\r\n        <div ref={conversationEndRef} />\r\n      </List>\r\n\r\n      {/* Footer: Input Form OR Final Message */}\r\n      <Box sx={{\r\n          p: 0, // No padding needed on container if form elements have it\r\n          // borderTop: '1px solid', borderColor: 'divider', // Optional divider\r\n          // bgcolor: 'background.default' // Optional background\r\n        }}>\r\n        {isFinal ? (\r\n          // Final Message - Applying .saved-message styles\r\n          <Box sx={{\r\n             width: '100%',\r\n             bgcolor: bubbleAiBgColor, // background-color\r\n             borderRadius: '20px',\r\n             p: 2.5, // padding: 20px;\r\n             mt: 2.5, // margin-top: 20px;\r\n             textAlign: 'center',\r\n          }}>\r\n             <Typography sx={{ fontSize: '1rem', lineHeight: 1.4, color: bubbleAiTextColor }}>\r\n               Your final business problem has been saved for later use.\r\n             </Typography>\r\n          </Box>\r\n        ) : (\r\n          // Input Form - Applying .response-form styles\r\n          <Box component=\"form\" onSubmit={handleSubmit} sx={{\r\n            width: '100%',           // width\r\n            display: 'flex',         // display: flex\r\n            // justifyContent: 'center', // Centering handled by parent alignment\r\n            gap: 1.25,               // gap: 10px;\r\n            mb: 2.5,                 // margin-bottom: 20px;\r\n           }}>\r\n            <TextField\r\n              fullWidth // replaces flex: 1\r\n              variant=\"outlined\" // Use outlined to easily style the wrapper\r\n              size=\"small\" // Controls height somewhat\r\n              placeholder=\"Type your answer here...\"\r\n              value={userResponse}\r\n              onChange={e => setUserResponse(e.target.value)}\r\n              required\r\n              disabled={isLoading}\r\n              InputProps={{ // Target internal input element and add adornment\r\n                 sx: { // Style the input base itself\r\n                    color: '#fff', // input color\r\n                    fontSize: '1rem', // input font-size\r\n                    '& input::placeholder': { // Style placeholder specifically\r\n                        color: placeholderColor,\r\n                        opacity: 1, // Ensure placeholder is visible\r\n                        fontSize: '1rem',\r\n                    },\r\n                 },\r\n                 endAdornment: ( // Submit button as adornment\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        type=\"submit\"\r\n                        disabled={isLoading || !userResponse.trim()}\r\n                        edge=\"end\"\r\n                        sx={{ // Apply .submit-button styles to IconButton\r\n                           color: '#fff',\r\n                           bgcolor: submitButtonBgColor,\r\n                           borderRadius: '25px', // Make it round like the input\r\n                           p: '8px', // Adjust padding for icon size\r\n                           fontSize: '1rem', // Not directly applicable, controls icon size relatively\r\n                           transition: 'background-color 0.3s ease, transform 0.2s ease',\r\n                           '&:hover': {\r\n                             bgcolor: submitButtonHoverBgColor,\r\n                             transform: 'translateY(-1px)',\r\n                           },\r\n                           '&:active': {\r\n                              bgcolor: submitButtonActiveBgColor,\r\n                              transform: 'translateY(0)',\r\n                           },\r\n                           // Adjust margin if needed to align vertically\r\n                           // mr: -1 // Pull closer to edge if needed\r\n                         }}\r\n                      >\r\n                        <SendIcon sx={{ fontSize: '1.25rem' }} />\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  ),\r\n               }}\r\n               // Target the outlined input wrapper for background and border\r\n               sx={{\r\n                 flex: 1, // Ensure TextField takes up space like the input did\r\n                 '& .MuiOutlinedInput-root': {\r\n                   bgcolor: inputBgColor, // background-color\r\n                   borderRadius: '25px', // border-radius\r\n                   paddingLeft: '20px', // Simulate input padding start\r\n                   paddingRight: '10px', // Adjust right padding for adornment\r\n                   fontSize: '1rem',\r\n                   transition: 'background-color 0.2s ease',\r\n                   '& fieldset': { // Remove the default border\r\n                     border: 'none',\r\n                   },\r\n                   '&.Mui-focused': {\r\n                     bgcolor: inputFocusBgColor, // :focus background-color\r\n                     '& fieldset': {\r\n                       border: 'none', // Ensure no border on focus either\r\n                     },\r\n                   },\r\n                   '&:hover fieldset': { // Remove hover border\r\n                     border: 'none',\r\n                   },\r\n                 },\r\n               }}\r\n            />\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}