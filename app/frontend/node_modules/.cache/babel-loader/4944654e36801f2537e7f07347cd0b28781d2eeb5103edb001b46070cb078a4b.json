{"ast":null,"code":"var _jsxFileName = \"D:\\\\AutoML\\\\app\\\\frontend\\\\src\\\\pages\\\\Conversation.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport styles from './conversation_style.module.css';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { callApi } from '../api/client'; // Adjust path if necessary\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Conversation() {\n  _s();\n  const {\n    state\n  } = useLocation();\n  const navigate = useNavigate();\n  const [conversation, setConversation] = useState((state === null || state === void 0 ? void 0 : state.conversation) || []);\n  const [userResponse, setUserResponse] = useState('');\n  const [isFinal, setIsFinal] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const conversationEndRef = useRef(null);\n  const parseMessage = msg => {\n    if (typeof msg !== 'string') return {\n      sender: 'unknown',\n      content: String(msg)\n    };\n    const parts = msg.split(\":\", 1);\n    const sender = parts[0].toLowerCase();\n    let content = msg.substring(parts[0].length + 1).trim();\n    if (sender === 'ai' && content.match(/^Question\\s*\\d+\\)/i)) {\n      content = content.substring(content.indexOf(')') + 1).trim();\n    }\n    return {\n      sender,\n      content\n    };\n  };\n  useEffect(() => {\n    var _conversationEndRef$c;\n    (_conversationEndRef$c = conversationEndRef.current) === null || _conversationEndRef$c === void 0 ? void 0 : _conversationEndRef$c.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [conversation]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!userResponse.trim() || isLoading) return;\n    setIsLoading(true);\n    const messageToSend = userResponse;\n    setUserResponse('');\n    setConversation(prev => [...prev, `User: ${messageToSend}`]);\n    try {\n      const data = await callApi('conversation', 'POST', {\n        user_response: messageToSend\n      });\n      setConversation(data.conversation || []);\n      if (data.final_problem) {\n        setIsFinal(true);\n      }\n    } catch (error) {\n      console.error(\"API call failed:\", error);\n      setConversation(prev => prev.slice(0, -1));\n      setUserResponse(messageToSend);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.chatContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Getting On Track...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.conversation,\n      children: [conversation.map((msg, i) => {\n        const {\n          sender,\n          content\n        } = parseMessage(msg);\n        const bubbleClass = sender === 'ai' ? styles.aiBubble : styles.userBubble;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: bubbleClass,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: conversationEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), isFinal ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.savedMessage,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your final business problem has been saved for later use.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.responseForm,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type your answer here...\",\n        value: userResponse,\n        onChange: e => setUserResponse(e.target.value),\n        required: true,\n        disabled: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: styles.submitButton,\n        disabled: isLoading || !userResponse.trim(),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Conversation, \"U16qMFmXaVkxSP2jqA2h5aD9oXI=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Conversation;\nvar _c;\n$RefreshReg$(_c, \"Conversation\");","map":{"version":3,"names":["React","useEffect","useState","useRef","styles","useLocation","useNavigate","callApi","jsxDEV","_jsxDEV","Conversation","_s","state","navigate","conversation","setConversation","userResponse","setUserResponse","isFinal","setIsFinal","isLoading","setIsLoading","conversationEndRef","parseMessage","msg","sender","content","String","parts","split","toLowerCase","substring","length","trim","match","indexOf","_conversationEndRef$c","current","scrollIntoView","behavior","handleSubmit","e","preventDefault","messageToSend","prev","data","user_response","final_problem","error","console","slice","className","chatContainer","children","header","fileName","_jsxFileName","lineNumber","columnNumber","map","i","bubbleClass","aiBubble","userBubble","ref","savedMessage","responseForm","onSubmit","type","placeholder","value","onChange","target","required","disabled","submitButton","_c","$RefreshReg$"],"sources":["D:/AutoML/app/frontend/src/pages/Conversation.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport styles from './conversation_style.module.css';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { callApi } from '../api/client'; // Adjust path if necessary\r\n\r\nexport default function Conversation() {\r\n  const { state } = useLocation();\r\n  const navigate = useNavigate();\r\n  const [conversation, setConversation] = useState(state?.conversation || []);\r\n  const [userResponse, setUserResponse] = useState('');\r\n  const [isFinal, setIsFinal] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const conversationEndRef = useRef(null);\r\n\r\n  const parseMessage = (msg) => {\r\n    if (typeof msg !== 'string') return { sender: 'unknown', content: String(msg) };\r\n    const parts = msg.split(\":\", 1);\r\n    const sender = parts[0].toLowerCase();\r\n    let content = msg.substring(parts[0].length + 1).trim();\r\n    if (sender === 'ai' && content.match(/^Question\\s*\\d+\\)/i)) {\r\n      content = content.substring(content.indexOf(')') + 1).trim();\r\n    }\r\n    return { sender, content };\r\n  };\r\n\r\n  useEffect(() => {\r\n    conversationEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [conversation]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!userResponse.trim() || isLoading) return;\r\n    setIsLoading(true);\r\n    const messageToSend = userResponse;\r\n    setUserResponse('');\r\n    setConversation(prev => [...prev, `User: ${messageToSend}`]);\r\n    try {\r\n      const data = await callApi('conversation', 'POST', { user_response: messageToSend });\r\n      setConversation(data.conversation || []);\r\n      if (data.final_problem) {\r\n        setIsFinal(true);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"API call failed:\", error);\r\n      setConversation(prev => prev.slice(0, -1));\r\n      setUserResponse(messageToSend);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.chatContainer}>\r\n      <div className={styles.header}>\r\n        <h1>Getting On Track...</h1>\r\n      </div>\r\n\r\n      <div className={styles.conversation}>\r\n        {conversation.map((msg, i) => {\r\n          const { sender, content } = parseMessage(msg);\r\n          const bubbleClass = sender === 'ai' ? styles.aiBubble : styles.userBubble;\r\n          return (\r\n            <div key={i} className={bubbleClass}>\r\n              <p>{content}</p>\r\n            </div>\r\n          );\r\n        })}\r\n        <div ref={conversationEndRef} />\r\n      </div>\r\n\r\n      {isFinal ? (\r\n        <div className={styles.savedMessage}>\r\n          <p>Your final business problem has been saved for later use.</p>\r\n        </div>\r\n      ) : (\r\n        <form className={styles.responseForm} onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Type your answer here...\"\r\n            value={userResponse}\r\n            onChange={(e) => setUserResponse(e.target.value)}\r\n            required\r\n            disabled={isLoading}\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className={styles.submitButton}\r\n            disabled={isLoading || !userResponse.trim()}\r\n          >\r\n            Send\r\n          </button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}