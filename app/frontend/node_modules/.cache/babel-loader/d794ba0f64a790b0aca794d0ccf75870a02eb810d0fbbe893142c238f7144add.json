{"ast":null,"code":"var _jsxFileName = \"D:\\\\AutoML\\\\app\\\\frontend\\\\src\\\\pages\\\\Conversation.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box, List, ListItem, ListItemText, TextField, Button } from '@mui/material';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { callApi } from '../api/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Conversation() {\n  _s();\n  const {\n    state\n  } = useLocation();\n  const [conversation, setConversation] = useState((state === null || state === void 0 ? void 0 : state.conversation) || []);\n  const [userResponse, setUserResponse] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (conversation.length === 2) {\n      callApi('conversation').then(data => {\n        setConversation(data.conversation);\n        if (data.final_problem) navigate('/conversation');\n      });\n    }\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const data = await callApi('conversation', 'POST', {\n      user_response: userResponse\n    });\n    setConversation(data.conversation);\n    setUserResponse('');\n    if (data.final_problem) navigate('/conversation');\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      children: conversation.map((msg, i) => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      onSubmit: handleSubmit,\n      sx: {\n        display: 'flex',\n        gap: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Your response\",\n        value: userResponse,\n        onChange: e => setUserResponse(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Conversation, \"LsyTE4SGB33Ab5W1pmhQ07TSXgs=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Conversation;\nvar _c;\n$RefreshReg$(_c, \"Conversation\");","map":{"version":3,"names":["React","useEffect","useState","Box","List","ListItem","ListItemText","TextField","Button","useLocation","useNavigate","callApi","jsxDEV","_jsxDEV","Conversation","_s","state","conversation","setConversation","userResponse","setUserResponse","navigate","length","then","data","final_problem","handleSubmit","e","preventDefault","user_response","children","map","msg","i","primary","fileName","_jsxFileName","lineNumber","columnNumber","component","onSubmit","sx","display","gap","fullWidth","label","value","onChange","target","required","type","variant","_c","$RefreshReg$"],"sources":["D:/AutoML/app/frontend/src/pages/Conversation.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Box, List, ListItem, ListItemText, TextField, Button } from '@mui/material';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { callApi } from '../api/client';\r\n\r\nexport default function Conversation() {\r\n  const { state } = useLocation();\r\n  const [conversation, setConversation] = useState(state?.conversation || []);\r\n  const [userResponse, setUserResponse] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (conversation.length === 2) {\r\n      callApi('conversation').then(data => {\r\n        setConversation(data.conversation);\r\n        if (data.final_problem) navigate('/conversation');\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const data = await callApi('conversation', 'POST', { user_response: userResponse });\r\n    setConversation(data.conversation);\r\n    setUserResponse('');\r\n    if (data.final_problem) navigate('/conversation');\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <List>\r\n        {conversation.map((msg, i) => (\r\n          <ListItem key={i}>\r\n            <ListItemText primary={msg} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Box component=\"form\" onSubmit={handleSubmit} sx={{ display: 'flex', gap: 1 }}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Your response\"\r\n          value={userResponse}\r\n          onChange={e => setUserResponse(e.target.value)}\r\n          required\r\n        />\r\n        <Button type=\"submit\" variant=\"contained\">Send</Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,SAAS,EAAEC,MAAM,QAAQ,eAAe;AACpF,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAASC,OAAO,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM;IAAEC;EAAM,CAAC,GAAGP,WAAW,CAAC,CAAC;EAC/B,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,CAAAc,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEC,YAAY,KAAI,EAAE,CAAC;EAC3E,MAAM,CAACE,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMmB,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9BT,SAAS,CAAC,MAAM;IACd,IAAIgB,YAAY,CAACK,MAAM,KAAK,CAAC,EAAE;MAC7BX,OAAO,CAAC,cAAc,CAAC,CAACY,IAAI,CAACC,IAAI,IAAI;QACnCN,eAAe,CAACM,IAAI,CAACP,YAAY,CAAC;QAClC,IAAIO,IAAI,CAACC,aAAa,EAAEJ,QAAQ,CAAC,eAAe,CAAC;MACnD,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,YAAY,GAAG,MAAMC,CAAC,IAAI;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMJ,IAAI,GAAG,MAAMb,OAAO,CAAC,cAAc,EAAE,MAAM,EAAE;MAAEkB,aAAa,EAAEV;IAAa,CAAC,CAAC;IACnFD,eAAe,CAACM,IAAI,CAACP,YAAY,CAAC;IAClCG,eAAe,CAAC,EAAE,CAAC;IACnB,IAAII,IAAI,CAACC,aAAa,EAAEJ,QAAQ,CAAC,eAAe,CAAC;EACnD,CAAC;EAED,oBACER,OAAA,CAACV,GAAG;IAAA2B,QAAA,gBACFjB,OAAA,CAACT,IAAI;MAAA0B,QAAA,EACFb,YAAY,CAACc,GAAG,CAAC,CAACC,GAAG,EAAEC,CAAC,kBACvBpB,OAAA,CAACR,QAAQ;QAAAyB,QAAA,eACPjB,OAAA,CAACP,YAAY;UAAC4B,OAAO,EAAEF;QAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GADjBL,CAAC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEN,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACPzB,OAAA,CAACV,GAAG;MAACoC,SAAS,EAAC,MAAM;MAACC,QAAQ,EAAEd,YAAa;MAACe,EAAE,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAE,CAAE;MAAAb,QAAA,gBAC5EjB,OAAA,CAACN,SAAS;QACRqC,SAAS;QACTC,KAAK,EAAC,eAAe;QACrBC,KAAK,EAAE3B,YAAa;QACpB4B,QAAQ,EAAEpB,CAAC,IAAIP,eAAe,CAACO,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;QAC/CG,QAAQ;MAAA;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFzB,OAAA,CAACL,MAAM;QAAC0C,IAAI,EAAC,QAAQ;QAACC,OAAO,EAAC,WAAW;QAAArB,QAAA,EAAC;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACvB,EAAA,CA5CuBD,YAAY;EAAA,QAChBL,WAAW,EAGZC,WAAW;AAAA;AAAA0C,EAAA,GAJNtC,YAAY;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}