{"ast":null,"code":"var _jsxFileName = \"D:\\\\AutoML\\\\app\\\\frontend\\\\src\\\\pages\\\\Conversation.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport styles from './conversation_style.module.css';\nimport { callApi } from '../api/client';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Conversation() {\n  _s();\n  const {\n    state\n  } = useLocation();\n  const [conversation, setConversation] = useState([]);\n  const [userResponse, setUserResponse] = useState('');\n  const [isFinal, setIsFinal] = useState(false);\n  const [finalProblemText, setFinalProblemText] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const conversationEndRef = useRef(null);\n  useEffect(() => {\n    if (!isFinal) {\n      var _conversationEndRef$c;\n      (_conversationEndRef$c = conversationEndRef.current) === null || _conversationEndRef$c === void 0 ? void 0 : _conversationEndRef$c.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [conversation, isFinal]);\n  useEffect(() => {\n    const fetchFirstQuestion = async () => {\n      console.log('Running fetchFirstQuestion with state:', state);\n      if (conversation.length === 0 && (!(state !== null && state !== void 0 && state.conversation) || state.conversation.length === 0) && !(state !== null && state !== void 0 && state.final_problem)) {\n        setIsLoading(true);\n        try {\n          const data = await callApi('conversation', 'GET');\n          console.log('Fetched conversation from API:', data);\n          const convo = data.conversation || [];\n          const initialFilteredConvo = convo.length > 1 ? convo.filter((line, index) => !(index === 0 && line.startsWith('User:'))) : convo;\n          setConversation(initialFilteredConvo);\n          if (data.final_problem) {\n            setFinalProblemText(data.final_problem);\n            setIsFinal(true);\n          }\n        } catch (err) {\n          console.error('Failed to load first question:', err);\n        } finally {\n          setIsLoading(false);\n        }\n      } else if (state !== null && state !== void 0 && state.conversation) {\n        const initialFilteredConvo = state.conversation.length > 1 ? state.conversation.filter((line, index) => !(index === 0 && line.startsWith('User:'))) : state.conversation;\n        setConversation(initialFilteredConvo);\n        if (state.final_problem) {\n          setFinalProblemText(state.final_problem);\n          setIsFinal(true);\n        }\n      }\n    };\n    fetchFirstQuestion();\n  }, [state]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!userResponse.trim() || isLoading || isFinal) return;\n    const answer = userResponse.trim();\n    const currentConvo = [...conversation];\n    setUserResponse('');\n    setIsLoading(true);\n    const updatedConvoUI = [...currentConvo, `User: ${answer}`];\n    setConversation(updatedConvoUI);\n    try {\n      const data = await callApi('conversation', 'POST', {\n        user_response: answer\n      });\n      console.log('POST response from API:', data);\n      const newConvo = data.conversation || [];\n      const finalFilteredConvo = newConvo.length > 1 ? newConvo.filter((line, index) => !(index === 0 && line.startsWith('User:'))) : newConvo;\n      if (data.final_problem) {\n        setFinalProblemText(data.final_problem);\n        setIsFinal(true);\n      } else {\n        setConversation(finalFilteredConvo);\n      }\n    } catch (err) {\n      console.error('API call failed:', err);\n      if (!isFinal) setConversation(currentConvo);\n      setUserResponse(answer);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const cleanMessage = (msg, prefixToRemove) => {\n    let cleaned = msg.startsWith(prefixToRemove) ? msg.substring(prefixToRemove.length).trim() : msg.trim();\n    cleaned = cleaned.replace(/^question\\s*\\d+\\)\\s*/i, '').trim();\n    return cleaned;\n  };\n  const feedback = {\n    SYSTEM_PROMPT_INITIAL: \"placeholder for initial system prompt text\",\n    SYSTEM_PROMPT_NEXT_ITERATION: \"placeholder for next iteration system prompt text\"\n  };\n  const shouldDisplaySystemMessage = msg => {\n    const content = msg.replace('System:', '').trim().toLowerCase();\n    const normalizedContent = content.replace(/\\*\\*/g, '');\n    return !(content.startsWith('you are ') || content.startsWith('your task is') || content.includes('format 1:') || content.includes('format 2:') || content.includes('decide if you now have enough information') || content.includes('continue the process') || normalizedContent.includes('structure a well-defined business problem statement') || normalizedContent.includes(\"your response should only include the final business problem statement\") || normalizedContent.includes(\"based on the entire conversation\") && normalizedContent.includes(\"final business problem statement\") || content === feedback.SYSTEM_PROMPT_INITIAL.toLowerCase() || content === feedback.SYSTEM_PROMPT_NEXT_ITERATION.toLowerCase());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.conversationPageWrapper,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.chatWindow,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.header,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Getting On Track...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), isFinal ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.finalProblemDisplay,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Final Business Problem:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.finalProblemText,\n          children: finalProblemText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.savedMessage,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This final business problem has been saved for later use.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.conversation,\n          children: [conversation.map((msg, idx) => {\n            if (msg.startsWith('User:')) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.userBubble,\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: cleanMessage(msg, 'User:')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 23\n                }, this)\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 21\n              }, this);\n            } else if (msg.startsWith('AI:')) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.aiBubble,\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: cleanMessage(msg, 'AI:')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 23\n                }, this)\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 21\n              }, this);\n            } else if (msg.startsWith('System:')) {\n              if (shouldDisplaySystemMessage(msg)) {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.aiBubble,\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: cleanMessage(msg, 'System:')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 25\n                  }, this)\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 23\n                }, this);\n              }\n            }\n            return null;\n          }), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.loadingIndicator,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Thinking...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: conversationEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: styles.responseForm,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Type your answer here...\",\n            value: userResponse,\n            onChange: e => setUserResponse(e.target.value),\n            required: true,\n            disabled: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: styles.submitButton,\n            disabled: isLoading || !userResponse.trim(),\n            children: isLoading ? 'Sending...' : 'Send'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n_s(Conversation, \"Gd1JxSKXmytcBLhSqw9lHYskS24=\", false, function () {\n  return [useLocation];\n});\n_c = Conversation;\nvar _c;\n$RefreshReg$(_c, \"Conversation\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useLocation","styles","callApi","jsxDEV","_jsxDEV","Fragment","_Fragment","Conversation","_s","state","conversation","setConversation","userResponse","setUserResponse","isFinal","setIsFinal","finalProblemText","setFinalProblemText","isLoading","setIsLoading","conversationEndRef","_conversationEndRef$c","current","scrollIntoView","behavior","fetchFirstQuestion","console","log","length","final_problem","data","convo","initialFilteredConvo","filter","line","index","startsWith","err","error","handleSubmit","e","preventDefault","trim","answer","currentConvo","updatedConvoUI","user_response","newConvo","finalFilteredConvo","cleanMessage","msg","prefixToRemove","cleaned","substring","replace","feedback","SYSTEM_PROMPT_INITIAL","SYSTEM_PROMPT_NEXT_ITERATION","shouldDisplaySystemMessage","content","toLowerCase","normalizedContent","includes","className","conversationPageWrapper","children","chatWindow","header","fileName","_jsxFileName","lineNumber","columnNumber","finalProblemDisplay","savedMessage","map","idx","userBubble","aiBubble","loadingIndicator","ref","responseForm","onSubmit","type","placeholder","value","onChange","target","required","disabled","submitButton","_c","$RefreshReg$"],"sources":["D:/AutoML/app/frontend/src/pages/Conversation.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport styles from './conversation_style.module.css';\r\nimport { callApi } from '../api/client';\r\n\r\nexport default function Conversation() {\r\n  const { state } = useLocation();\r\n  const [conversation, setConversation] = useState([]);\r\n  const [userResponse, setUserResponse] = useState('');\r\n  const [isFinal, setIsFinal] = useState(false);\r\n  const [finalProblemText, setFinalProblemText] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const conversationEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!isFinal) {\r\n      conversationEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  }, [conversation, isFinal]);\r\n\r\n  useEffect(() => {\r\n    const fetchFirstQuestion = async () => {\r\n      console.log('Running fetchFirstQuestion with state:', state);\r\n\r\n      if (\r\n        conversation.length === 0 &&\r\n        (!state?.conversation || state.conversation.length === 0) &&\r\n        !state?.final_problem\r\n      ) {\r\n        setIsLoading(true);\r\n        try {\r\n          const data = await callApi('conversation', 'GET');\r\n          console.log('Fetched conversation from API:', data);\r\n\r\n          const convo = data.conversation || [];\r\n          const initialFilteredConvo = convo.length > 1\r\n            ? convo.filter((line, index) => !(index === 0 && line.startsWith('User:')))\r\n            : convo;\r\n\r\n          setConversation(initialFilteredConvo);\r\n\r\n          if (data.final_problem) {\r\n            setFinalProblemText(data.final_problem);\r\n            setIsFinal(true);\r\n          }\r\n        } catch (err) {\r\n          console.error('Failed to load first question:', err);\r\n        } finally {\r\n          setIsLoading(false);\r\n        }\r\n      } else if (state?.conversation) {\r\n        const initialFilteredConvo = state.conversation.length > 1\r\n          ? state.conversation.filter((line, index) => !(index === 0 && line.startsWith('User:')))\r\n          : state.conversation;\r\n\r\n        setConversation(initialFilteredConvo);\r\n\r\n        if (state.final_problem) {\r\n          setFinalProblemText(state.final_problem);\r\n          setIsFinal(true);\r\n        }\r\n      }\r\n    };\r\n    fetchFirstQuestion();\r\n  }, [state]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!userResponse.trim() || isLoading || isFinal) return;\r\n\r\n    const answer = userResponse.trim();\r\n    const currentConvo = [...conversation];\r\n\r\n    setUserResponse('');\r\n    setIsLoading(true);\r\n\r\n    const updatedConvoUI = [...currentConvo, `User: ${answer}`];\r\n    setConversation(updatedConvoUI);\r\n\r\n    try {\r\n      const data = await callApi('conversation', 'POST', { user_response: answer });\r\n      console.log('POST response from API:', data);\r\n\r\n      const newConvo = data.conversation || [];\r\n      const finalFilteredConvo = newConvo.length > 1\r\n        ? newConvo.filter((line, index) => !(index === 0 && line.startsWith('User:')))\r\n        : newConvo;\r\n\r\n      if (data.final_problem) {\r\n        setFinalProblemText(data.final_problem);\r\n        setIsFinal(true);\r\n      } else {\r\n        setConversation(finalFilteredConvo);\r\n      }\r\n    } catch (err) {\r\n      console.error('API call failed:', err);\r\n      if (!isFinal) setConversation(currentConvo);\r\n      setUserResponse(answer);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const cleanMessage = (msg, prefixToRemove) => {\r\n    let cleaned = msg.startsWith(prefixToRemove)\r\n      ? msg.substring(prefixToRemove.length).trim()\r\n      : msg.trim();\r\n    cleaned = cleaned.replace(/^question\\s*\\d+\\)\\s*/i, '').trim();\r\n    return cleaned;\r\n  };\r\n\r\n  const feedback = {\r\n    SYSTEM_PROMPT_INITIAL: \"placeholder for initial system prompt text\",\r\n    SYSTEM_PROMPT_NEXT_ITERATION: \"placeholder for next iteration system prompt text\"\r\n  };\r\n\r\n  const shouldDisplaySystemMessage = (msg) => {\r\n    const content = msg.replace('System:', '').trim().toLowerCase();\r\n    const normalizedContent = content.replace(/\\*\\*/g, '');\r\n\r\n    return !(\r\n      content.startsWith('you are ') ||\r\n      content.startsWith('your task is') ||\r\n      content.includes('format 1:') ||\r\n      content.includes('format 2:') ||\r\n      content.includes('decide if you now have enough information') ||\r\n      content.includes('continue the process') ||\r\n      normalizedContent.includes('structure a well-defined business problem statement') ||\r\n      normalizedContent.includes(\"your response should only include the final business problem statement\") ||\r\n      (normalizedContent.includes(\"based on the entire conversation\") && normalizedContent.includes(\"final business problem statement\")) ||\r\n      content === feedback.SYSTEM_PROMPT_INITIAL.toLowerCase() ||\r\n      content === feedback.SYSTEM_PROMPT_NEXT_ITERATION.toLowerCase()\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={styles.conversationPageWrapper}>\r\n      <div className={styles.chatWindow}>\r\n        <div className={styles.header}>\r\n          <h1>Getting On Track...</h1>\r\n        </div>\r\n\r\n        {isFinal ? (\r\n          <div className={styles.finalProblemDisplay}>\r\n            <h2>Final Business Problem:</h2>\r\n            <p className={styles.finalProblemText}>{finalProblemText}</p>\r\n            <div className={styles.savedMessage}>\r\n              <p>This final business problem has been saved for later use.</p>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className={styles.conversation}>\r\n              {conversation.map((msg, idx) => {\r\n                if (msg.startsWith('User:')) {\r\n                  return (\r\n                    <div key={idx} className={styles.userBubble}>\r\n                      <p>{cleanMessage(msg, 'User:')}</p>\r\n                    </div>\r\n                  );\r\n                } else if (msg.startsWith('AI:')) {\r\n                  return (\r\n                    <div key={idx} className={styles.aiBubble}>\r\n                      <p>{cleanMessage(msg, 'AI:')}</p>\r\n                    </div>\r\n                  );\r\n                } else if (msg.startsWith('System:')) {\r\n                  if (shouldDisplaySystemMessage(msg)) {\r\n                    return (\r\n                      <div key={idx} className={styles.aiBubble}>\r\n                        <p>{cleanMessage(msg, 'System:')}</p>\r\n                      </div>\r\n                    );\r\n                  }\r\n                }\r\n                return null;\r\n              })}\r\n              {isLoading && (\r\n                <div className={styles.loadingIndicator}>\r\n                  <p>Thinking...</p>\r\n                </div>\r\n              )}\r\n              <div ref={conversationEndRef} />\r\n            </div>\r\n\r\n            <form className={styles.responseForm} onSubmit={handleSubmit}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Type your answer here...\"\r\n                value={userResponse}\r\n                onChange={e => setUserResponse(e.target.value)}\r\n                required\r\n                disabled={isLoading}\r\n              />\r\n              <button\r\n                type=\"submit\"\r\n                className={styles.submitButton}\r\n                disabled={isLoading || !userResponse.trim()}\r\n              >\r\n                {isLoading ? 'Sending...' : 'Send'}\r\n              </button>\r\n            </form>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}