{"ast":null,"code":"var _jsxFileName = \"D:\\\\AutoML\\\\app\\\\frontend\\\\src\\\\pages\\\\chat.js\",\n  _s = $RefreshSig$();\n// src/pages/Chat.js\nimport React, { useEffect, useState } from 'react';\nimport styles from '../components/chat.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chat() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [status, setStatus] = useState('loading');\n  useEffect(() => {\n    (async () => {\n      try {\n        const res = await fetch('/api/chatlm', {\n          method: 'POST'\n        });\n        const {\n          suggestion\n        } = await res.json();\n        setMessages([{\n          role: 'assistant',\n          content: suggestion\n        }]);\n        setStatus('ready');\n      } catch {\n        setStatus('error');\n      }\n    })();\n  }, []);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMsg = input.trim();\n    setMessages(m => [...m, {\n      role: 'user',\n      content: userMsg\n    }]);\n    setInput('');\n    setStatus('loading');\n    try {\n      const res = await fetch('/api/chatlm/message', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_message: userMsg\n        })\n      });\n      const {\n        response\n      } = await res.json();\n      setMessages(m => [...m, {\n        role: 'assistant',\n        content: response\n      }]);\n      setStatus('ready');\n    } catch {\n      setStatus('error');\n    }\n  };\n  if (status === 'loading') return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: styles.loading,\n    children: \"Loading chat\\u2026\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 36\n  }, this);\n  if (status === 'error') return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: styles.error,\n    children: \"Chat failed to load.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 34\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.chatContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.messageList,\n      children: messages.map((m, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: m.role === 'user' ? styles.userMsg : styles.botMsg,\n        children: m.content\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inputBar,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: e => e.key === 'Enter' && sendMessage(),\n        className: styles.input,\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        className: styles.sendBtn,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"f8y/QO3Trp+MBatiMHHGplYOQAw=\");\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","styles","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","input","setInput","status","setStatus","res","fetch","method","suggestion","json","role","content","sendMessage","trim","userMsg","m","headers","body","JSON","stringify","user_message","response","className","loading","children","fileName","_jsxFileName","lineNumber","columnNumber","error","chatContainer","messageList","map","i","botMsg","inputBar","value","onChange","e","target","onKeyDown","key","placeholder","onClick","sendBtn","_c","$RefreshReg$"],"sources":["D:/AutoML/app/frontend/src/pages/chat.js"],"sourcesContent":["// src/pages/Chat.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport styles from '../components/chat.module.css';\r\n\r\nexport default function Chat() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const [status, setStatus] = useState('loading');\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const res = await fetch('/api/chatlm', { method: 'POST' });\r\n        const { suggestion } = await res.json();\r\n        setMessages([{ role: 'assistant', content: suggestion }]);\r\n        setStatus('ready');\r\n      } catch {\r\n        setStatus('error');\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n    const userMsg = input.trim();\r\n    setMessages(m => [...m, { role: 'user', content: userMsg }]);\r\n    setInput('');\r\n    setStatus('loading');\r\n\r\n    try {\r\n      const res = await fetch('/api/chatlm/message', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ user_message: userMsg }),\r\n      });\r\n      const { response } = await res.json();\r\n      setMessages(m => [...m, { role: 'assistant', content: response }]);\r\n      setStatus('ready');\r\n    } catch {\r\n      setStatus('error');\r\n    }\r\n  };\r\n\r\n  if (status === 'loading') return <p className={styles.loading}>Loading chatâ€¦</p>;\r\n  if (status === 'error') return <p className={styles.error}>Chat failed to load.</p>;\r\n\r\n  return (\r\n    <div className={styles.chatContainer}>\r\n      <div className={styles.messageList}>\r\n        {messages.map((m, i) => (\r\n          <div key={i} className={m.role === 'user' ? styles.userMsg : styles.botMsg}>\r\n            {m.content}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className={styles.inputBar}>\r\n        <input\r\n          value={input}\r\n          onChange={e => setInput(e.target.value)}\r\n          onKeyDown={e => e.key === 'Enter' && sendMessage()}\r\n          className={styles.input}\r\n          placeholder=\"Type your message...\"\r\n        />\r\n        <button onClick={sendMessage} className={styles.sendBtn}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}