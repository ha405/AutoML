{"ast":null,"code":"var _jsxFileName = \"D:\\\\AutoML\\\\app\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './index-react.css';\nimport { useNavigate } from 'react-router-dom';\nimport { IconButton } from '@mui/material';\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\nimport MicIcon from '@mui/icons-material/Mic';\nimport { callApi } from '../api/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [queryInput, setQueryInput] = useState('');\n  const [file, setFile] = useState(null);\n  const navigate = useNavigate();\n  const inputRef = useRef(null);\n  const [theme] = useState('dark');\n  const recognitionRef = useRef(null);\n  const [isListening, setIsListening] = useState(false);\n  const [micError, setMicError] = useState(''); // Optional: state to show mic errors\n\n  useEffect(() => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      console.warn(\"Speech Recognition not supported by this browser.\");\n      setMicError(\"Voice input not supported by this browser.\");\n      return; // Exit setup\n    }\n    const recognition = new SpeechRecognition();\n    recognition.lang = \"en-US\";\n    recognition.interimResults = false;\n    recognition.maxAlternatives = 1;\n    recognition.onresult = event => {\n      const transcript = event.results[0][0].transcript;\n      console.log('Speech Result:', transcript);\n      setQueryInput(transcript);\n      // Don't set isListening(false) here, let onend handle it\n    };\n    recognition.onerror = event => {\n      console.error(\"Speech Recognition Error:\", event.error, event.message);\n      let errorMsg = `Speech error: ${event.error}`;\n      if (event.error === 'not-allowed' || event.error === 'service-not-allowed') {\n        errorMsg = \"Microphone permission denied.\";\n      } else if (event.error === 'no-speech') {\n        errorMsg = \"No speech detected.\";\n      }\n      setMicError(errorMsg);\n      setIsListening(false); // Ensure state is reset on error\n    };\n    recognition.onstart = () => {\n      console.log('Speech Recognition Started');\n      setIsListening(true);\n      setMicError(''); // Clear previous errors on successful start\n    };\n    recognition.onend = () => {\n      console.log('Speech Recognition Ended');\n      // This is the most reliable place to set listening to false,\n      // as it fires after result, error, or manual stop.\n      setIsListening(false);\n    };\n    recognitionRef.current = recognition;\n\n    // Cleanup function\n    return () => {\n      if (recognitionRef.current) {\n        recognitionRef.current.abort(); // Stop recognition if component unmounts\n        console.log(\"Speech recognition aborted on unmount.\");\n      }\n    };\n  }, []); // Empty array: run only once on mount\n\n  const handleFileChange = e => {\n    if (e.target.files && e.target.files[0]) {\n      setFile(e.target.files[0]);\n      setMicError(''); // Clear mic errors if file is selected\n    } else {\n      setFile(null);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // If recognition is somehow still active, stop it\n    if (isListening && recognitionRef.current) {\n      recognitionRef.current.stop();\n    }\n    const formData = new FormData();\n    formData.append('queryInput', queryInput);\n    if (file) {\n      formData.append('file', file);\n    }\n    try {\n      // Show loading state?\n      const data = await callApi('home', 'POST', formData);\n      // Hide loading state?\n      if (data && data.conversation) {\n        navigate('/conversation', {\n          state: {\n            conversation: data.conversation\n          }\n        });\n      } else {\n        console.error(\"API response missing data.\");\n        setMicError(\"Failed to process request.\"); // Show generic error\n      }\n    } catch (error) {\n      // Hide loading state?\n      console.error(\"API call failed:\", error);\n      setMicError(\"Network error or server issue.\"); // Show generic error\n    }\n  };\n  const handleVoiceInput = () => {\n    if (!recognitionRef.current) {\n      console.log(\"Recognition ref not ready.\");\n      setMicError(\"Voice input not available.\");\n      return;\n    }\n    if (!isListening) {\n      try {\n        // Check permissions state (optional advanced)\n        // navigator.permissions.query({ name: 'microphone' }).then(permissionStatus => { ... });\n        setQueryInput(''); // Clear input before starting\n        setFile(null); // Clear file selection maybe?\n        setMicError(''); // Clear previous errors\n        console.log(\"Attempting to start recognition...\");\n        recognitionRef.current.start();\n        // State update (isListening=true) will be handled by the 'onstart' event\n      } catch (error) {\n        // This catch might trigger if start() is called while already active on some browsers\n        console.error(\"Error caught trying to start recognition:\", error);\n        setMicError(\"Could not start voice input.\");\n        setIsListening(false); // Ensure state is false if start failed\n      }\n    } else {\n      // If already listening, clicking the button should stop it\n      console.log(\"Attempting to stop recognition...\");\n      recognitionRef.current.stop();\n      // State update (isListening=false) will be handled by the 'onend' event\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `autoML ${theme} ${isListening ? 'listening' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Bonjour\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"How Can We Help You?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              ref: inputRef,\n              value: queryInput,\n              onChange: e => setQueryInput(e.target.value),\n              placeholder: isListening ? \"Listening...\" : \"Describe Your Problem\",\n              required: true,\n              disabled: isListening\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-icons\",\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                component: \"label\",\n                htmlFor: \"file-upload\",\n                className: \"icon-button\",\n                disabled: isListening,\n                title: \"Attach file\",\n                children: /*#__PURE__*/_jsxDEV(AttachFileIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"file-upload\",\n                type: \"file\",\n                hidden: true,\n                onChange: handleFileChange,\n                disabled: isListening\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: handleVoiceInput,\n                className: `icon-button ${isListening ? 'active' : ''}`,\n                disabled: !recognitionRef.current // Disable if API wasn't set up\n                ,\n                title: micError // Show error in title if exists\n                ? micError : recognitionRef.current // Check if ref exists before checking isListening\n                ? isListening ? \"Stop Listening\" : \"Start Voice Input\" : \"Voice Input not supported\",\n                children: /*#__PURE__*/_jsxDEV(MicIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), file && !micError &&\n          /*#__PURE__*/\n          // Don't show file if there's a mic error maybe?\n          _jsxDEV(\"p\", {\n            className: \"file-display\",\n            children: [\"File: \", file.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), isListening && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"status-display listening-indicator\",\n            children: \"\\uD83C\\uDF99\\uFE0F Listening...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), micError && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"status-display error-message\",\n            children: [\"\\u26A0\\uFE0F \", micError]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"action-button\",\n          disabled: isListening,\n          children: \"Start Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"divSHn+ZfrXzBl/HVkWwXd6yi8I=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useNavigate","IconButton","AttachFileIcon","MicIcon","callApi","jsxDEV","_jsxDEV","Home","_s","queryInput","setQueryInput","file","setFile","navigate","inputRef","theme","recognitionRef","isListening","setIsListening","micError","setMicError","SpeechRecognition","window","webkitSpeechRecognition","console","warn","recognition","lang","interimResults","maxAlternatives","onresult","event","transcript","results","log","onerror","error","message","errorMsg","onstart","onend","current","abort","handleFileChange","e","target","files","handleSubmit","preventDefault","stop","formData","FormData","append","data","conversation","state","handleVoiceInput","start","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","ref","value","onChange","placeholder","required","disabled","component","htmlFor","title","id","hidden","onClick","name","_c","$RefreshReg$"],"sources":["D:/AutoML/app/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport './index-react.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { IconButton } from '@mui/material';\r\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\r\nimport MicIcon from '@mui/icons-material/Mic';\r\nimport { callApi } from '../api/client';\r\n\r\nexport default function Home() {\r\n  const [queryInput, setQueryInput] = useState('');\r\n  const [file, setFile] = useState(null);\r\n  const navigate = useNavigate();\r\n  const inputRef = useRef(null);\r\n  const [theme] = useState('dark');\r\n\r\n  const recognitionRef = useRef(null);\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [micError, setMicError] = useState(''); // Optional: state to show mic errors\r\n\r\n  useEffect(() => {\r\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n\r\n    if (!SpeechRecognition) {\r\n      console.warn(\"Speech Recognition not supported by this browser.\");\r\n      setMicError(\"Voice input not supported by this browser.\");\r\n      return; // Exit setup\r\n    }\r\n\r\n    const recognition = new SpeechRecognition();\r\n    recognition.lang = \"en-US\";\r\n    recognition.interimResults = false;\r\n    recognition.maxAlternatives = 1;\r\n\r\n    recognition.onresult = (event) => {\r\n      const transcript = event.results[0][0].transcript;\r\n      console.log('Speech Result:', transcript);\r\n      setQueryInput(transcript);\r\n      // Don't set isListening(false) here, let onend handle it\r\n    };\r\n\r\n    recognition.onerror = (event) => {\r\n      console.error(\"Speech Recognition Error:\", event.error, event.message);\r\n      let errorMsg = `Speech error: ${event.error}`;\r\n      if (event.error === 'not-allowed' || event.error === 'service-not-allowed') {\r\n        errorMsg = \"Microphone permission denied.\";\r\n      } else if (event.error === 'no-speech') {\r\n        errorMsg = \"No speech detected.\";\r\n      }\r\n      setMicError(errorMsg);\r\n      setIsListening(false); // Ensure state is reset on error\r\n    };\r\n\r\n    recognition.onstart = () => {\r\n      console.log('Speech Recognition Started');\r\n      setIsListening(true);\r\n      setMicError(''); // Clear previous errors on successful start\r\n    };\r\n\r\n    recognition.onend = () => {\r\n      console.log('Speech Recognition Ended');\r\n      // This is the most reliable place to set listening to false,\r\n      // as it fires after result, error, or manual stop.\r\n      setIsListening(false);\r\n    };\r\n\r\n    recognitionRef.current = recognition;\r\n\r\n    // Cleanup function\r\n    return () => {\r\n      if (recognitionRef.current) {\r\n        recognitionRef.current.abort(); // Stop recognition if component unmounts\r\n        console.log(\"Speech recognition aborted on unmount.\");\r\n      }\r\n    };\r\n\r\n  }, []); // Empty array: run only once on mount\r\n\r\n  const handleFileChange = (e) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      setFile(e.target.files[0]);\r\n      setMicError(''); // Clear mic errors if file is selected\r\n    } else {\r\n      setFile(null);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // If recognition is somehow still active, stop it\r\n    if (isListening && recognitionRef.current) {\r\n      recognitionRef.current.stop();\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('queryInput', queryInput);\r\n    if (file) {\r\n      formData.append('file', file);\r\n    }\r\n\r\n    try {\r\n      // Show loading state?\r\n      const data = await callApi('home', 'POST', formData);\r\n      // Hide loading state?\r\n      if (data && data.conversation) {\r\n        navigate('/conversation', { state: { conversation: data.conversation } });\r\n      } else {\r\n        console.error(\"API response missing data.\");\r\n        setMicError(\"Failed to process request.\"); // Show generic error\r\n      }\r\n    } catch (error) {\r\n      // Hide loading state?\r\n      console.error(\"API call failed:\", error);\r\n      setMicError(\"Network error or server issue.\"); // Show generic error\r\n    }\r\n  };\r\n\r\n  const handleVoiceInput = () => {\r\n    if (!recognitionRef.current) {\r\n        console.log(\"Recognition ref not ready.\");\r\n        setMicError(\"Voice input not available.\");\r\n        return;\r\n    }\r\n\r\n    if (!isListening) {\r\n      try {\r\n        // Check permissions state (optional advanced)\r\n        // navigator.permissions.query({ name: 'microphone' }).then(permissionStatus => { ... });\r\n        setQueryInput(''); // Clear input before starting\r\n        setFile(null); // Clear file selection maybe?\r\n        setMicError(''); // Clear previous errors\r\n        console.log(\"Attempting to start recognition...\");\r\n        recognitionRef.current.start();\r\n        // State update (isListening=true) will be handled by the 'onstart' event\r\n      } catch (error) {\r\n        // This catch might trigger if start() is called while already active on some browsers\r\n        console.error(\"Error caught trying to start recognition:\", error);\r\n        setMicError(\"Could not start voice input.\");\r\n        setIsListening(false); // Ensure state is false if start failed\r\n      }\r\n    } else {\r\n      // If already listening, clicking the button should stop it\r\n      console.log(\"Attempting to stop recognition...\");\r\n      recognitionRef.current.stop();\r\n      // State update (isListening=false) will be handled by the 'onend' event\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`autoML ${theme} ${isListening ? 'listening' : ''}`}>\r\n      <div className=\"container\">\r\n        <div className=\"header\">\r\n          <p>Bonjour</p>\r\n          <h1>How Can We Help You?</h1>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"input-area\">\r\n            <div className=\"input-wrapper\">\r\n              <input\r\n                type=\"text\"\r\n                ref={inputRef}\r\n                value={queryInput}\r\n                onChange={(e) => setQueryInput(e.target.value)}\r\n                placeholder={isListening ? \"Listening...\" : \"Describe Your Problem\"}\r\n                required\r\n                disabled={isListening}\r\n              />\r\n              <div className=\"input-icons\">\r\n                <IconButton\r\n                  component=\"label\"\r\n                  htmlFor=\"file-upload\"\r\n                  className=\"icon-button\"\r\n                  disabled={isListening}\r\n                  title=\"Attach file\"\r\n                >\r\n                  <AttachFileIcon />\r\n                </IconButton>\r\n                <input\r\n                  id=\"file-upload\"\r\n                  type=\"file\"\r\n                  hidden\r\n                  onChange={handleFileChange}\r\n                  disabled={isListening}\r\n                />\r\n                <IconButton\r\n                  onClick={handleVoiceInput}\r\n                  className={`icon-button ${isListening ? 'active' : ''}`}\r\n                  disabled={!recognitionRef.current} // Disable if API wasn't set up\r\n                  title={\r\n                    micError // Show error in title if exists\r\n                      ? micError\r\n                      : recognitionRef.current // Check if ref exists before checking isListening\r\n                      ? isListening\r\n                        ? \"Stop Listening\"\r\n                        : \"Start Voice Input\"\r\n                      : \"Voice Input not supported\"\r\n                  }\r\n                >\r\n                  <MicIcon />\r\n                </IconButton>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Display File Name */}\r\n            {file && !micError && ( // Don't show file if there's a mic error maybe?\r\n              <p className=\"file-display\">\r\n                File: {file.name}\r\n              </p>\r\n            )}\r\n\r\n            {/* Display Listening Indicator or Error Message */}\r\n            {isListening && (\r\n              <p className=\"status-display listening-indicator\">\r\n                🎙️ Listening...\r\n              </p>\r\n            )}\r\n            {micError && (\r\n               <p className=\"status-display error-message\">\r\n                ⚠️ {micError}\r\n              </p>\r\n            )}\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"action-button\" disabled={isListening}>\r\n            Start Analysis\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}