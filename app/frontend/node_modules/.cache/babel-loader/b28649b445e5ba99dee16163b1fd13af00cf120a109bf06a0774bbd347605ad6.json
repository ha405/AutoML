{"ast":null,"code":"var _jsxFileName = \"D:\\\\AutoML\\\\app\\\\frontend\\\\src\\\\pages\\\\chat.js\",\n  _s = $RefreshSig$();\n// src/pages/Chat.js\nimport React, { useEffect, useState } from 'react';\nimport styles from './chat.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chat() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [status, setStatus] = useState('loading'); // 'loading' | 'error' | 'ready'\n  const [errorMsg, setErrorMsg] = useState('');\n\n  // Initialize\n  useEffect(() => {\n    (async () => {\n      try {\n        const res = await fetch('/api/chatlm', {\n          method: 'POST'\n        });\n        if (!res.ok) {\n          const err = await res.json();\n          throw new Error(err.error || `HTTP ${res.status}`);\n        }\n        const {\n          suggestion\n        } = await res.json();\n        setMessages([{\n          role: 'assistant',\n          content: suggestion\n        }]);\n        setStatus('ready');\n      } catch (err) {\n        console.error('Chat init failed:', err);\n        setErrorMsg(err.message);\n        setStatus('error');\n      }\n    })();\n  }, []);\n  const sendMessage = async () => {\n    const text = input.trim();\n    if (!text) return;\n    setMessages(m => [...m, {\n      role: 'user',\n      content: text\n    }]);\n    setInput('');\n    setStatus('loading');\n    try {\n      const res = await fetch('/api/chatlm/message', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_message: text\n        })\n      });\n      if (!res.ok) {\n        const err = await res.json();\n        throw new Error(err.error || `HTTP ${res.status}`);\n      }\n      const {\n        response\n      } = await res.json();\n      setMessages(m => [...m, {\n        role: 'assistant',\n        content: response\n      }]);\n      setStatus('ready');\n    } catch (err) {\n      console.error('Chat send failed:', err);\n      setErrorMsg(err.message);\n      setStatus('error');\n    }\n  };\n  if (status === 'loading') {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.loading,\n      children: \"Loading chat\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this);\n  }\n  if (status === 'error') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.errorContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.error,\n        children: \"Unable to load chat.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.errorDetails,\n        children: errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.chatContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.messageList,\n      children: messages.map((m, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: m.role === 'user' ? styles.userMsg : styles.botMsg,\n        children: m.content\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inputBar,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.input,\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: e => e.key === 'Enter' && sendMessage(),\n        placeholder: \"Type your message\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.sendBtn,\n        onClick: sendMessage,\n        disabled: status === 'loading',\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"J8fCE83RINLcOV3yKaju0IP9q5g=\");\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","styles","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","input","setInput","status","setStatus","errorMsg","setErrorMsg","res","fetch","method","ok","err","json","Error","error","suggestion","role","content","console","message","sendMessage","text","trim","m","headers","body","JSON","stringify","user_message","response","className","loading","children","fileName","_jsxFileName","lineNumber","columnNumber","errorContainer","errorDetails","chatContainer","messageList","map","i","userMsg","botMsg","inputBar","type","value","onChange","e","target","onKeyDown","key","placeholder","sendBtn","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/AutoML/app/frontend/src/pages/chat.js"],"sourcesContent":["// src/pages/Chat.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport styles from './chat.module.css';\r\n\r\nexport default function Chat() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const [status, setStatus] = useState('loading'); // 'loading' | 'error' | 'ready'\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n\r\n  // Initialize\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const res = await fetch('/api/chatlm', { method: 'POST' });\r\n        if (!res.ok) {\r\n          const err = await res.json();\r\n          throw new Error(err.error || `HTTP ${res.status}`);\r\n        }\r\n        const { suggestion } = await res.json();\r\n        setMessages([{ role: 'assistant', content: suggestion }]);\r\n        setStatus('ready');\r\n      } catch (err) {\r\n        console.error('Chat init failed:', err);\r\n        setErrorMsg(err.message);\r\n        setStatus('error');\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const sendMessage = async () => {\r\n    const text = input.trim();\r\n    if (!text) return;\r\n    setMessages(m => [...m, { role: 'user', content: text }]);\r\n    setInput('');\r\n    setStatus('loading');\r\n\r\n    try {\r\n      const res = await fetch('/api/chatlm/message', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ user_message: text }),\r\n      });\r\n      if (!res.ok) {\r\n        const err = await res.json();\r\n        throw new Error(err.error || `HTTP ${res.status}`);\r\n      }\r\n      const { response } = await res.json();\r\n      setMessages(m => [...m, { role: 'assistant', content: response }]);\r\n      setStatus('ready');\r\n    } catch (err) {\r\n      console.error('Chat send failed:', err);\r\n      setErrorMsg(err.message);\r\n      setStatus('error');\r\n    }\r\n  };\r\n\r\n  if (status === 'loading') {\r\n    return <p className={styles.loading}>Loading chat…</p>;\r\n  }\r\n  if (status === 'error') {\r\n    return (\r\n      <div className={styles.errorContainer}>\r\n        <p className={styles.error}>Unable to load chat.</p>\r\n        <p className={styles.errorDetails}>{errorMsg}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={styles.chatContainer}>\r\n      <div className={styles.messageList}>\r\n        {messages.map((m, i) => (\r\n          <div\r\n            key={i}\r\n            className={m.role === 'user' ? styles.userMsg : styles.botMsg}\r\n          >\r\n            {m.content}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className={styles.inputBar}>\r\n        <input\r\n          className={styles.input}\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={e => setInput(e.target.value)}\r\n          onKeyDown={e => e.key === 'Enter' && sendMessage()}\r\n          placeholder=\"Type your message…\"\r\n        />\r\n        <button\r\n          className={styles.sendBtn}\r\n          onClick={sendMessage}\r\n          disabled={status === 'loading'}\r\n        >\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}