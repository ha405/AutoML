{"ast":null,"code":"var _jsxFileName = \"D:\\\\AutoML\\\\app\\\\frontend\\\\src\\\\pages\\\\Conversation.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport styles from './conversation_style.module.css';\nimport { useLocation } from 'react-router-dom';\nimport { callApi } from '../api/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Conversation() {\n  _s();\n  const {\n    state\n  } = useLocation();\n  const [conversation, setConversation] = useState((state === null || state === void 0 ? void 0 : state.conversation) || []);\n  const [userResponse, setUserResponse] = useState('');\n  const [isFinal, setIsFinal] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const conversationEndRef = useRef(null);\n  useEffect(() => {\n    var _conversationEndRef$c;\n    (_conversationEndRef$c = conversationEndRef.current) === null || _conversationEndRef$c === void 0 ? void 0 : _conversationEndRef$c.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [conversation]);\n  useEffect(() => {\n    const fetchFirstQuestion = async () => {\n      if (conversation.length <= 1) {\n        setIsLoading(true);\n        try {\n          const data = await callApi('conversation', 'GET');\n          setConversation(data.conversation || []);\n          if (data.final_problem) setIsFinal(true);\n        } catch (err) {\n          console.error('Failed to load first question:', err);\n        } finally {\n          setIsLoading(false);\n        }\n      }\n    };\n    fetchFirstQuestion();\n  }, []); // Run once on mount\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!userResponse.trim() || isLoading) return;\n    setIsLoading(true);\n    const answer = userResponse.trim();\n    setUserResponse('');\n    setConversation(prev => [...prev, `User: ${answer}`]);\n    try {\n      const data = await callApi('conversation', 'POST', {\n        user_response: answer\n      });\n      setConversation(data.conversation || []);\n      if (data.final_problem) setIsFinal(true);\n    } catch (err) {\n      console.error('API call failed:', err);\n      setConversation(prev => prev.slice(0, -1));\n      setUserResponse(answer);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const isInstructionPrompt = msg => msg.startsWith('System:') && msg.toLowerCase().includes('you are an ai assisting');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.conversationPageWrapper,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.chatWindow,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.header,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Getting On Track...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.conversation,\n        children: [conversation.map((msg, idx) => {\n          if (isInstructionPrompt(msg)) return null;\n          const [prefix, ...rest] = msg.split(':');\n          const sender = prefix.trim().toLowerCase();\n          const content = rest.join(':').trim();\n          if (sender === 'system') {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.aiBubble,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this)\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this);\n          }\n          if (sender === 'user') {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.userBubble,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this)\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this);\n          }\n          return null;\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: conversationEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), isFinal ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.savedMessage,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your final business problem has been saved for later use.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        className: styles.responseForm,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type your answer here...\",\n          value: userResponse,\n          onChange: e => setUserResponse(e.target.value),\n          required: true,\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.submitButton,\n          disabled: isLoading || !userResponse.trim(),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(Conversation, \"ORYuhkNOh4fAv4YF/lzFBmSyC70=\", false, function () {\n  return [useLocation];\n});\n_c = Conversation;\nvar _c;\n$RefreshReg$(_c, \"Conversation\");","map":{"version":3,"names":["React","useEffect","useState","useRef","styles","useLocation","callApi","jsxDEV","_jsxDEV","Conversation","_s","state","conversation","setConversation","userResponse","setUserResponse","isFinal","setIsFinal","isLoading","setIsLoading","conversationEndRef","_conversationEndRef$c","current","scrollIntoView","behavior","fetchFirstQuestion","length","data","final_problem","err","console","error","handleSubmit","e","preventDefault","trim","answer","prev","user_response","slice","isInstructionPrompt","msg","startsWith","toLowerCase","includes","className","conversationPageWrapper","children","chatWindow","header","fileName","_jsxFileName","lineNumber","columnNumber","map","idx","prefix","rest","split","sender","content","join","aiBubble","userBubble","ref","savedMessage","responseForm","onSubmit","type","placeholder","value","onChange","target","required","disabled","submitButton","_c","$RefreshReg$"],"sources":["D:/AutoML/app/frontend/src/pages/Conversation.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport styles from './conversation_style.module.css';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { callApi } from '../api/client';\r\n\r\nexport default function Conversation() {\r\n  const { state } = useLocation();\r\n  const [conversation, setConversation] = useState(state?.conversation || []);\r\n  const [userResponse, setUserResponse] = useState('');\r\n  const [isFinal, setIsFinal]     = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const conversationEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    conversationEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [conversation]);\r\n\r\n  useEffect(() => {\r\n    const fetchFirstQuestion = async () => {\r\n      if (conversation.length <= 1) {\r\n        setIsLoading(true);\r\n        try {\r\n          const data = await callApi('conversation', 'GET');\r\n          setConversation(data.conversation || []);\r\n          if (data.final_problem) setIsFinal(true);\r\n        } catch (err) {\r\n          console.error('Failed to load first question:', err);\r\n        } finally {\r\n          setIsLoading(false);\r\n        }\r\n      }\r\n    };\r\n    fetchFirstQuestion();\r\n  }, []); // Run once on mount\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!userResponse.trim() || isLoading) return;\r\n\r\n    setIsLoading(true);\r\n    const answer = userResponse.trim();\r\n    setUserResponse('');\r\n    setConversation(prev => [...prev, `User: ${answer}`]);\r\n\r\n    try {\r\n      const data = await callApi('conversation', 'POST', { user_response: answer });\r\n      setConversation(data.conversation || []);\r\n      if (data.final_problem) setIsFinal(true);\r\n    } catch (err) {\r\n      console.error('API call failed:', err);\r\n      setConversation(prev => prev.slice(0, -1));\r\n      setUserResponse(answer);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const isInstructionPrompt = (msg) =>\r\n    msg.startsWith('System:') && msg.toLowerCase().includes('you are an ai assisting');\r\n\r\n  return (\r\n    <div className={styles.conversationPageWrapper}>\r\n      <div className={styles.chatWindow}>\r\n        <div className={styles.header}>\r\n          <h1>Getting On Track...</h1>\r\n        </div>\r\n\r\n        <div className={styles.conversation}>\r\n          {conversation.map((msg, idx) => {\r\n            if (isInstructionPrompt(msg)) return null;\r\n\r\n            const [prefix, ...rest] = msg.split(':');\r\n            const sender  = prefix.trim().toLowerCase();\r\n            const content = rest.join(':').trim();\r\n\r\n            if (sender === 'system') {\r\n              return (\r\n                <div key={idx} className={styles.aiBubble}>\r\n                  <p>{content}</p>\r\n                </div>\r\n              );\r\n            }\r\n\r\n            if (sender === 'user') {\r\n              return (\r\n                <div key={idx} className={styles.userBubble}>\r\n                  <p>{content}</p>\r\n                </div>\r\n              );\r\n            }\r\n\r\n            return null;\r\n          })}\r\n\r\n          <div ref={conversationEndRef} />\r\n        </div>\r\n\r\n        {isFinal ? (\r\n          <div className={styles.savedMessage}>\r\n            <p>Your final business problem has been saved for later use.</p>\r\n          </div>\r\n        ) : (\r\n          <form className={styles.responseForm} onSubmit={handleSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Type your answer here...\"\r\n              value={userResponse}\r\n              onChange={e => setUserResponse(e.target.value)}\r\n              required\r\n              disabled={isLoading}\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className={styles.submitButton}\r\n              disabled={isLoading || !userResponse.trim()}\r\n            >\r\n              Send\r\n            </button>\r\n          </form>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}